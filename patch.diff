Submodule bundle/dracula contains modified content
diff --git a/bundle/dracula/autoload/lightline/colorscheme/dracula.vim b/bundle/dracula/autoload/lightline/colorscheme/dracula.vim
index 42ed79d..c18f4ff 100644
--- a/bundle/dracula/autoload/lightline/colorscheme/dracula.vim
+++ b/bundle/dracula/autoload/lightline/colorscheme/dracula.vim
@@ -6,6 +6,7 @@
 " =============================================================================
 
 let s:black    = g:dracula#palette.bg
+let s:pitchblack= g:dracula#palette.bgdarker
 let s:gray     = g:dracula#palette.selection
 let s:white    = g:dracula#palette.fg
 let s:darkblue = g:dracula#palette.comment
@@ -15,25 +16,31 @@ let s:orange   = g:dracula#palette.orange
 let s:purple   = g:dracula#palette.purple
 let s:red      = g:dracula#palette.red
 let s:yellow   = g:dracula#palette.yellow
+let s:pink   = g:dracula#palette.pink
 
 if exists('g:lightline')
 
-  let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}
-  let s:p.normal.left = [ [ s:black, s:purple ], [ s:cyan, s:gray ] ]
-  let s:p.normal.right = [ [ s:black, s:purple ], [ s:white, s:darkblue ] ]
-  let s:p.inactive.right = [ [ s:black, s:darkblue ], [ s:white, s:black ] ]
-  let s:p.inactive.left =  [ [ s:cyan, s:black ], [ s:white, s:black ] ]
-  let s:p.insert.left = [ [ s:black, s:green ], [ s:cyan, s:gray ] ]
-  let s:p.replace.left = [ [ s:black, s:red ], [ s:cyan, s:gray ] ]
-  let s:p.visual.left = [ [ s:black, s:orange ], [ s:cyan, s:gray ] ]
+  let s:p = {'normal': {}, 'command': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}
+  let s:p.normal.left = [ [ s:black, s:purple, 'bold' ], [  s:white, s:darkblue ] ]
+  let s:p.normal.right = [ [ s:black, s:purple, 'bold' ], [ s:white, s:darkblue ] ]
+  let s:p.command.left = [ [ s:black, s:orange, 'bold' ], [ s:white, s:darkblue ] ]
+  let s:p.command.right = [ [ s:black, s:orange, 'bold' ], [ s:white, s:darkblue ] ]
+  let s:p.inactive.right = [ [ s:white, s:gray ], [ s:white, s:gray ] ]
+  let s:p.inactive.left =  [ [ s:white, s:gray ], [ s:white, s:gray ] ]
+  let s:p.insert.left = [ [ s:black, s:green, 'bold' ], [ s:white, s:darkblue ] ]
+  let s:p.insert.right = [ [ s:black, s:green, 'bold' ], [ s:white, s:darkblue ] ]
+  let s:p.replace.left = [ [ s:black, s:red, 'bold' ], [ s:white, s:darkblue ] ]
+  let s:p.replace.right = [ [ s:black, s:red, 'bold' ], [ s:white, s:darkblue ] ]
+  let s:p.visual.left = [ [ s:black, s:yellow, 'bold' ], [ s:white, s:darkblue ] ]
+  let s:p.visual.right = [ [ s:black, s:yellow, 'bold' ], [ s:white, s:darkblue ] ]
   let s:p.normal.middle = [ [ s:white, s:gray ] ]
   let s:p.inactive.middle = [ [ s:white, s:gray ] ]
   let s:p.tabline.left = [ [ s:darkblue, s:gray ] ]
-  let s:p.tabline.tabsel = [ [ s:cyan, s:black ] ]
+  let s:p.tabline.tabsel = [ [ s:black, s:purple ] ]
   let s:p.tabline.middle = [ [ s:darkblue, s:gray ] ]
   let s:p.tabline.right = copy(s:p.normal.right)
-  let s:p.normal.error = [ [ s:red, s:black ] ]
-  let s:p.normal.warning = [ [ s:yellow, s:black ] ]
+  let s:p.normal.error = [ [ s:red, s:black, 'bold' ] ]
+  let s:p.normal.warning = [ [ s:orange, s:black, 'bold' ] ]
 
   let g:lightline#colorscheme#dracula#palette = lightline#colorscheme#flatten(s:p)
 
Submodule bundle/nerdtree contains modified content
diff --git a/bundle/nerdtree/autoload/nerdtree/ui_glue.vim b/bundle/nerdtree/autoload/nerdtree/ui_glue.vim
index c5c9618..df0834f 100644
--- a/bundle/nerdtree/autoload/nerdtree/ui_glue.vim
+++ b/bundle/nerdtree/autoload/nerdtree/ui_glue.vim
@@ -15,7 +15,7 @@ function! nerdtree#ui_glue#createDefaultBindings() abort
     call NERDTreeAddKeyMap({ 'key': '<2-LeftMouse>', 'scope': 'all', 'callback': s.'activateAll' })
 
     call NERDTreeAddKeyMap({ 'key': g:NERDTreeMapCustomOpen, 'scope':'FileNode', 'callback': s.'customOpenFile'})
-    call NERDTreeAddKeyMap({ 'key': g:NERDTreeMapCustomOpen, 'scope':'DirNode', 'callback': s.'customOpenDir'})
+    call NERDTreeAddKeyMap({ 'key': g:NERDTreeMapCustomOpen, 'scope':'DirNode', 'callback': s . 'chRoot'})
     call NERDTreeAddKeyMap({ 'key': g:NERDTreeMapCustomOpen, 'scope':'Bookmark', 'callback': s.'customOpenBookmark'})
     call NERDTreeAddKeyMap({ 'key': g:NERDTreeMapCustomOpen, 'scope':'all', 'callback': s.'activateAll' })
 
@@ -188,6 +188,7 @@ endfunction
 " changes the current root to the selected one
 function! s:chRoot(node) abort
     call b:NERDTree.changeRoot(a:node)
+    normal 2gg
 endfunction
 
 " FUNCTION: s:nerdtree#ui_glue#chRootCwd() {{{1
Submodule bundle/nerdtree-visual-selection contains modified content
diff --git a/bundle/nerdtree-visual-selection/ftplugin/nerdtree.vim b/bundle/nerdtree-visual-selection/ftplugin/nerdtree.vim
index fd44bd8..6a40258 100644
--- a/bundle/nerdtree-visual-selection/ftplugin/nerdtree.vim
+++ b/bundle/nerdtree-visual-selection/ftplugin/nerdtree.vim
@@ -108,10 +108,10 @@ endfunction
 " --------------------------------------------------------------------------------
 " Main Processor
 function! s:ProcessSelection(action, setup, callback, cleanup, closeWhenDone, confirmEachNode) range
-    if b:NERDTree.isWinTree()
-        call nerdtree#echo("Command is unavailable. Open NERDTree with :NERDTree, :NERDTreeToggle, or :NERDTreeFocus instead.")
-        return
-    endif
+    "if b:NERDTree.isWinTree()
+    "    call nerdtree#echo("Command is unavailable. Open NERDTree with :NERDTree, :NERDTreeToggle, or :NERDTreeFocus instead.")
+    "    return
+    "endif
 
     if type(a:setup) == v:t_func
         if !a:setup()
Submodule extra/vim-visual-multi contains modified content
diff --git a/extra/vim-visual-multi/autoload/vm/maps/all.vim b/extra/vim-visual-multi/autoload/vm/maps/all.vim
index 2e51d5e..68a9f32 100644
--- a/extra/vim-visual-multi/autoload/vm/maps/all.vim
+++ b/extra/vim-visual-multi/autoload/vm/maps/all.vim
@@ -55,8 +55,8 @@ fun! vm#maps#all#permanent() abort
     let maps["Add Cursor At Pos"][0]     = leader.'\'
     let maps["Start Regex Search"][0]    = leader.'/'
     let maps["Select All"][0]            = leader.'A'
-    let maps["Add Cursor Down"][0]       = '<C-Down>'
-    let maps["Add Cursor Up"][0]         = '<C-Up>'
+    let maps["Add Cursor Down"][0]       = 'รง'
+    let maps["Add Cursor Up"][0]         = 'ร'
     let maps["Select l"][0]              = '<S-Right>'
     let maps["Select h"][0]              = '<S-Left>'
     let maps["Visual Regex"][0]          = visual.'/'
